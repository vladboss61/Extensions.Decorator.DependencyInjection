name: "Build"

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  workflow_dispatch:
    inputs:
      dotnet_version:
        description: 'The version of .NET to use'
        required: false
        default: '8.0.x' # Latest dotnet version.

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Pwd before Checkout
        run: |
          echo "Current directory before checkout:"
          pwd
          ls -lah

      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: Pwd after Checkout
        run: |
          echo "Current directory after checkout:"
          pwd
          ls -lah

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ github.event.inputs.dotnet_version }}

      - name: Build dotnet project
        shell: pwsh
        run: |
          Write-Host "Starting build process." -ForegroundColor Green
          Write-Host "Building on ${{ github.ref_name }}"

          pwsh ./scripts/build.ps1

          Write-Host "Build process completed." -ForegroundColor Green

      - name: Pwd after Build
        if: success()
        shell: pwsh
        run: |
          Write-Host "Current directory after build:" -ForegroundColor Green
          pwd
          Write-Host "Files in directory:" -ForegroundColor Green
          ls -lah

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-results
          path: ./ci

  artifacts:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Pwd before Downloading Artifacts
        if: success()
        shell: pwsh
        run: |
          Write-Host "Current directory before downloading artifacts:" -ForegroundColor Green
          pwd
          Write-Host "Files in directory:" -ForegroundColor Green
          ls -lah

      - name: Download build artifacts.
        uses: actions/download-artifact@v4
        with:
          name: build-results
          path: ./ci

      - name: Pwd after Downloading Artifacts
        if: success()
        shell: pwsh
        run: |
          Write-Host "Current directory after downloading artifacts:" -ForegroundColor Green
          pwd
          Write-Host "Files in directory:" -ForegroundColor Green
          ls -lah